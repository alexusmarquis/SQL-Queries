1---WHAT CATEGORY OF PIZZA IS MOST POPULAR? LEAST POPULAR?---

SELECT DISTINCT pt.category, COUNT(od.order_id) AS order_amt 
 FROM order_details od 
  JOIN pizzas 
   ON pizzas.pizza_id = od.pizza_id
    JOIN pizza_types pt 
   ON pt.pizza_type_id = pizzas.pizza_type_id 
  GROUP BY pt.category
ORDER BY order_amt DESC;

---THIS BRINGS BACK TOTALS FOR EACH CATEGORY.
CLASSIC IS MOST POPULAR, CHICKEN IS LEAST POPULAR---


2--WHAT PIZZA TYPE IS MOST POPULAR? LEAST POPULAR?

SELECT DISTINCT pt.name, COUNT(od.order_id) AS order_amt
 FROM order_details od
  JOIN pizzas 
   ON pizzas.pizza_id = od.pizza_id
    JOIN pizza_types pt 
   ON pt.pizza_type_id = pizzas.pizza_type_id
  GROUP BY pt.name
ORDER BY order_amt DESC LIMIT 1;

---TO SHOW LEAST POPULAR, I TAKE OUT DESC FROM THE QUERY. 
THE CLASSIC DELUXE PIZZA IS MOST POPULAR, AND THE BRIE BARRE PIZZA IS LEAST POPULAR---


3---WHAT INGREDIENTS FOR THE MOST POPULAR PIZZA TYPE AND CHECK CONNECTING INGREDIENTS TO 
OTHER PIZZA TYPES.---

SELECT ingredients 
  FROM pizza_types
    WHERE pizza_type_id = 'classic_dlx';
    
SELECT name, ingredients 
  FROM pizza_types
   WHERE ingredients LIKE '%Pepperoni%'
    OR ingredients LIKE '%Red Onions%'
     OR ingredients LIKE '%Red Peppers%'
      OR ingredients LIKE '%Bacon%';

--FIRST, I CHECKED INGREDIENTS FROM THE CLASSIC DELUXE, THEN CHECKED CONNECTING INGREDIENTS
WHICH SHOWED A CORRELATION WITH 21 TYPES. THIS SHOWS THAT THESE INGREDIENTS MIGHT NEED TO BE ORDERED 
MORE FREQUENTLY THAN OTHERS.


4---SHOW INGREDIENTS FOR LEAST POPULAR AND CHECK CONNECTING INGREDIENTS TO OTHER PIZZA TYPES. 
THIS IS TO SHOW WHAT INGREDIENTS OR PIZZA TYPE TO GET RID OF.---

SELECT ingredients 
 FROM pizza_types 
  WHERE name = 'The Brie Carre Pizza';

SELECT name, ingredients 
 FROM pizza_types
  WHERE ingredients LIKE '%Brio Carre Cheese%'
    OR ingredients LIKE '%Prosciutto%'
   OR ingredients LIKE '%Carmelized Onions%'
 OR ingredients LIKE '%Pears%'
OR ingredients LIKE '%Thyme%';

---THIS SHOWS THAT THERE IS NO CORRELATION OF INGREDIENTS BETWEEN THE BRIE CARRE PIZZA AND ANY
OTHER PIZZA TYPES BESIDES GARLIC(GARLIC IS IN MOST PIZZAS). WE NEED TO DECIDE IF WE WANT TO KEEP THE
BRIE CARRE, IT IS ONLY MADE IN A SMALL SIZE AND THE PRICE IS $23.65---


5---SALES DURING WEEKENDS(fri-sun)---

SELECT orders.date, ROUND(SUM(pizzas.price),2) AS sales 
 FROM pizzas
  JOIN order_details od ON od.pizza_id = pizzas.pizza_id
   JOIN orders ON orders.order_id = od.order_id
    WHERE dayofweek(orders.date) = 6 
   OR dayofweek(orders.date) = 7
  OR dayofweek(orders.date) = 1
 GROUP BY orders.date
ORDER BY orders.date, sales;

---THIS SHOWS EACH WEEKEND DATE CORRESPONDING TO THE TOTAL SALES FOR THAT DATE.---


6---TOTAL WEEKEND SALES---

SELECT ROUND(SUM(pizzas.price),2) AS sales 
 FROM pizzas
  JOIN order_details od ON od.pizza_id = pizzas.pizza_id
   JOIN orders ON orders.order_id = od.order_id
  WHERE dayofweek(orders.date) = 6 
 OR dayofweek(orders.date) = 7
OR dayofweek(orders.date) = 1;

---THIS SHOWS THE TOTAL SALES FOR ALL OF THE WEEKEND DATES THOUGHOUT THE YEAR.---


7---SALES DURING HOLIDAYS. NEW YEARS DAY, MEMORIAL DAY, LABOR DAY, 4TH OF JULY. NEW YEARS EVE 
HAS NO ORDER DATA IN SET---

SELECT orders.date, ROUND(SUM(pizzas.price),2) AS sales from pizzas
 JOIN order_details od ON od.pizza_id = pizzas.pizza_id
  JOIN orders ON orders.order_id = od.order_id
   WHERE date = '2015-01-01'
    OR date = '2015-05-25'
   OR date = '2015-07-04'
  OR date = '2015-09-07'
 GROUP BY orders.date 
ORDER BY orders.date, sales;

8---TOTAL SALES FOR 2015, ALONG WITH # OF ORDERS---

SELECT COUNT(od.order_id) AS amt_of_orders, 
 ROUND(SUM(price), 2) AS total_sales_2015 
  FROM pizzas
   JOIN order_details od ON od.pizza_id = pizzas.pizza_id
 JOIN orders ON orders.order_id = od.order_id
WHERE orders.date BETWEEN '2015-01-01' AND '2015-12-31';

---# OF ORDERS = 48345, TOTAL SALES FOR YEAR = 797430.4---


9--SALES PER MONTH---

SELECT month(date) AS month, 
 ROUND(SUM(pizzas.price),2) AS salespermonth
  FROM orders
   JOIN order_details od ON od.order_id = orders.order_id
  JOIN pizzas ON pizzas.pizza_id = od.pizza_id
 GROUP BY month(date)
ORDER BY month,salespermonth;

 
 10---MAX, MIN SALES---
 
SELECT month(date) AS month, 
 ROUND(SUM(pizzas.price),2) AS salespermonth
  FROM orders
   JOIN order_details od ON od.order_id = orders.order_id
  JOIN pizzas ON pizzas.pizza_id = od.pizza_id
 GROUP BY month
ORDER BY salespermonth LIMIT 1;

---TO SHOW MAX ADD IS DESC NECT TO SALESPERMONTH---


11---WHAT SIZE PIZZA IS MOST POPULAR? LEAST?---

SELECT COUNT(od.order_id) AS amtorders, pizzas.size
 FROM order_details od
  JOIN pizzas ON od.pizza_id = pizzas.pizza_id
   WHERE pizzas.size = 'S'
    OR pizzas.size = 'M'
   OR pizzas.size = 'L'
  OR pizzas.size = 'XL'
 OR pizzas.size = 'XXL'
GROUP BY pizzas.size;

---THIS SHOWS THE AMOUNT OF ORDERS BY SIZE. LARGE IS MOST POPULAR, XXL LEAST POPULAR---


12---WHAT TIME OF DAY IS PIZZA MOST ORDERED? I SEPERATED THE TIME OF DAY BY POSSIBLE SHIFT TIMES
THIS WILL HELP US DETERMINE HOW MANY EMPLOYEES TO SCHEDULE DURING EACH 5 HOUR INCREMENT.---

SELECT '9am-1:59pm' AS timeframe, COUNT(*) AS orderamt
 FROM orders
   WHERE orders.time BETWEEN '09:00:00' AND '13:59:59' 
UNION
   SELECT '2pm-6:59pm' AS timeframe, COUNT(*) AS orderamt
     FROM orders
       WHERE orders.time BETWEEN '14:00:00' AND '18:59:59'
UNION
   SELECT '7pm-11:59pm' AS timeframe, COUNT(*) AS orderamt
     FROM orders
       WHERE orders.time BETWEEN '19:00:00' AND '23:59:59';

---THIS SHOWS THAT THE SHIFT FROM 2PM-6:59PM HAS THE MOST ORDERS. THIS IS WHEN MORE EMPLOYEES
SHOULD BE SCHEDULED---


13---SHOW DATE WITH MOST AMOUNT OF ORDERS, SHOW SALES ALONG WITH IT---

SELECT COUNT(DISTINCT orders.order_id) AS amt_orders, date, 
  ROUND(SUM(pizzas.price),2) AS sales
   FROM orders
    JOIN order_details od 
     ON od.order_id = orders.order_id
    JOIN pizzas 
   ON od.pizza_id = pizzas.pizza_id
 GROUP BY date
ORDER BY amt_orders DESC;
